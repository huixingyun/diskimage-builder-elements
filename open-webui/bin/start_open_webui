#!/usr/bin/env bash
set -e

# load login profile
. /etc/profile

APP_NAME="open_webui"
APP_DIR=${OPENWEBUI_DIR:-"/root/open-webui/backend"}
APP_PORT=${OPENWEBUI_PORT:-"10000"}
APP_DATA_TAR=${OPENWEBUI_DATA_TAR:-"/root/${APP_NAME}_data.tar"}
APP_DATA_VOLUME=${OPENWEBUI_DATA_VOLUME:-"/root/data"}
APP_VENV_DIR=${OPENWEBUI_VENV_DIR:-"${APP_DIR}/venv"}

APP_DATA_DIR="${APP_DATA_VOLUME}/${APP_NAME}"
data_version="$(basename "$(readlink "${APP_DATA_TAR}")")"
APP_INIT_START="${APP_DATA_DIR}/${data_version}.init-start"
APP_INIT_DONE="${APP_DATA_DIR}/${data_version}.init-done"

# make sure conda env exist
if ! $(conda env list | grep -q "${APP_NAME}"); then
    echo "Creating conda env '${APP_NAME}'"
    conda create -y --name "${APP_NAME}" python=3.11
fi

# try extract from existing tar file
if [ -f "${APP_DATA_TAR}" ] && [ ! -f "${APP_INIT_DONE}" ]; then
    echo "First launch will take some time, please be patient..."

    if [ -d "${APP_DATA_DIR}" ] && [ ! -z "ls -A ${APP_DATA_DIR}" ]; then
        # last init not complete
        if [ -f "${APP_INIT_START}" ] && [ ! -f "${APP_INIT_DONE}" ]; then
            echo "Last init not complete, delete ${APP_DATA_DIR} and try again."
            rm -rf "${APP_DATA_DIR}"
        else
            # rename the dir
            BAK="${APP_DATA_DIR}_$(date +%s)"
            echo "Renaming ${APP_DATA_DIR} to ${BAK}"
            mv -v "${APP_DATA_DIR}" "${BAK}"
        fi
    fi

    # set a empty file to indicate init start
    mkdir -p "${APP_DATA_DIR}"
    touch "${APP_INIT_START}"

    echo "Uncompressing data from ${APP_DATA_TAR} to ${APP_DATA_DIR}"
    tar -xf "${APP_DATA_TAR}" -C "${APP_DATA_DIR}" \
        --checkpoint=$(($(stat -L -c %s "${APP_DATA_TAR}") / 512 / 20 / 100)) \
        --checkpoint-action=. &&
        echo "Done"

    # set a empty file to indicate init complete
    touch "${APP_INIT_DONE}"
fi

load_venv() {
    if [[ -z "${VIRTUAL_ENV}" ]]; then
        if [[ -f "${APP_VENV_DIR}/bin/activate" ]]; then
            source "${APP_VENV_DIR}/bin/activate"
        else
            echo "No venv found, creating a new one"
            "$(conda env list | awk '$1 == "'${APP_NAME}'" { print $NF }')/bin/python" \
                -m venv "$([[ -L "${APP_VENV_DIR}" ]] && readlink "${APP_VENV_DIR}" || echo "${APP_VENV_DIR}")"
            source "${APP_VENV_DIR}/bin/activate"

            pip install -r "${APP_DIR}/requirements.txt"
        fi
    else
        printf "python venv already activate or run without venv: ${VIRTUAL_ENV}"
    fi
}

cd "${APP_DIR}" && load_venv

# if --install-only, exit now
if [[ "${1:-}" == "--install-only" ]]; then
    exit 0
fi

export PORT="${APP_PORT}"

export DEFAULT_MODELS="${DEFAULT_MODELS:-llama3:latest}"

GEN_IMG_SERVICE="comfyui.service"
if [[ -f "/etc/systemd/system/${GEN_IMG_SERVICE}" ]]; then
    # check if service is not active
    if ! systemctl is-active --quiet "${GEN_IMG_SERVICE}"; then
        systemctl enable --now "${GEN_IMG_SERVICE}"
    fi
    export ENABLE_IMAGE_GENERATION="True"
    export IMAGE_GENERATION_ENGINE="comfyui"
    export COMFYUI_BASE_URL="${COMFYUI_BASE_URL:-http://localhost:10001}"
    export IMAGE_GENERATION_MODEL="animaPencilXL_v100.safetensors"
    export IMAGE_SIZE="1152x864"
    export IMAGE_STEPS="30"
fi

export ENABLE_SIGNUP="False"
export DATA_DIR="${APP_DATA_DIR}/data"
export FRONTEND_BUILD_DIR="${APP_DATA_DIR}/ui"

bash start.sh
