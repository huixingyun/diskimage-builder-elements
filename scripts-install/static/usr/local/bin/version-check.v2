#!/usr/bin/env python3

import json
import sys
import subprocess


class Check:
    def __init__(self, command: str = ""):
        self.command = command

    def _is_command(self, command: str) -> bool:
        if not self.command:
            return True

        if (
            subprocess.call(
                f"command -v {command.split()[0]}",
                shell=True,
                stdout=subprocess.DEVNULL,
            )
            != 0
        ):
            return True
        return False

    def version(self) -> str:
        if self._is_command(self.command):
            return "Not found"
        try:
            return (
                subprocess.check_output(self.command, shell=True)
                .decode("utf-8")
                .strip()
            )
        except Exception as e:
            return str(e)


if __name__ == "__main__":

    components = {
        "Kernel": "uname -r",
        "Python": "python3 -V | awk '{print $2}'",
        "Conda": "conda -V | awk '{print $2}'",
        "Nvidia Driver": "nvidia-smi --query-gpu=driver_version --format=csv,noheader",
        "Jupyter Lab": "jupyter lab --version",
        "Rclone": "rclone version | head -1 | awk '{print $2}'",
        "Prometheus": "prometheus --version | head -1 | awk '{print $3}'",
        "Node Exporter": "node_exporter --version | head -1 | awk '{print $3}'",
        "DCGM": "dcgmi --version | grep -v '^$' | awk '{print $3}'",
        "DCGM Exporter": "dcgm-exporter --version | awk '{print $NF}'",
        "cloud-init": "cloud-init --version | awk '{print $NF}'",
        "cloud-config-version": "test -e /etc/cloud-config-version && cat /etc/cloud-config-version || exit 0",
    }

    result = {}
    for component, command in components.items():
        result[component] = Check(command).version()

    arg = sys.argv[1:]
    if arg and arg[0] == "--pretty":
        print(json.dumps(result, indent=4))
    else:
        print(json.dumps(result))
