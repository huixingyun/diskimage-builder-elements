#!/bin/bash
set -e

MOUNT_POINT="/root/data"
PALWORLD_SERVER_NAME="HOLDCLOUD_Palworld"
PALWORLD_DATA_DIR=${MOUNT_POINT}/palworld
PALWORLD_SETTING=${PALWORLD_DATA_DIR}/Pal/Saved/Config/LinuxServer/PalWorldSettings.ini
HELPER=/opt/scripts-install/helpers
DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"

logs() {
    cd ${PALWORLD_DATA_DIR}
    docker compose logs -f palworld
}

admin() {
    cd ${PALWORLD_DATA_DIR}
    docker compose exec -it palworld rcon-cli
}

backup() {
    # will create a backup in ${PALWORLD_DATA_DIR}/backups/
    cd ${PALWORLD_DATA_DIR}
    docker compose exec palworld backup &&
        find ${PALWORLD_DATA_DIR}/backups/ -type f -mtime +10 -delete
}

restore() {
    # list all files in ${PALWORLD_DATA_DIR}/backups/
    backups=($(ls -1 ${PALWORLD_DATA_DIR}/backups/))
    for i in "${!backups[@]}"; do
        printf "%s\t%s\n" "$i" "${backups[$i]}"
    done

    # get backup by number
    read -p "选择需要恢复的存档编号: " backup_number
    backup=${backups[$backup_number]}

    # prompt for confirmation
    read -p "确认恢复存档 ${backup} ? [y/N] " confirm
    if [[ ! $confirm =~ ^[Yy]$ ]]; then
        echo "取消恢复存档"
        exit 1
    fi

    # will restore from ${PALWORLD_DATA_DIR}/backups/
    cd ${PALWORLD_DATA_DIR}
    docker compose stop palworld
    tar -xf "${PALWORLD_DATA_DIR}/backups/${backup}" -C "${PALWORLD_DATA_DIR}/Pal/"
    docker compose start palworld
    echo "存档 ${backup} 已恢复"
}

set_new_password() {
    read -p "输入新的服务器密码: " PALWORLD_SERVER_PASSWORD

    # update SERVER_PASSWORD in docker-compose.yml
    sed -i "s/SERVER_PASSWORD=.*/SERVER_PASSWORD=${PALWORLD_SERVER_PASSWORD}/g" ${PALWORLD_DATA_DIR}/docker-compose.yml
    cd ${PALWORLD_DATA_DIR}
    docker compose up -d
    echo "服务器密码已更新，新的密码是 ${PALWORLD_SERVER_PASSWORD}" 
}

restart() {
    cd ${PALWORLD_DATA_DIR}
    docker compose restart
}

stop() {
    cd ${PALWORLD_DATA_DIR}
    docker compose stop
}

start() {
    cd ${PALWORLD_DATA_DIR}
    docker compose start
}

restart() {
    cd ${PALWORLD_DATA_DIR}
    docker compose restart
}

setup_systemd_backup() {
    # check if already setup
    if systemctl is-active --quiet palworld-server-backup.timer; then
        echo "systemd backup already setup"
        return
    fi

    # setup systemd backup
    cat <<EOF >/etc/systemd/system/palworld-server-backup.service
[Unit]
Description=Backup Palworld Server
After=docker.service
Requires=docker.service

[Service]
Type=oneshot
ExecStart=/bin/bash ${DIR}/palworld-server backup

[Install]
WantedBy=multi-user.target
EOF

    # run every 4 hours
    cat <<EOF >/etc/systemd/system/palworld-server-backup.timer
[Unit]
Description=Run backup every 4 hours

[Timer]
OnBootSec=15min
OnUnitActiveSec=4h

[Install]
WantedBy=timers.target
EOF

    systemctl daemon-reload
    systemctl enable palworld-server-backup.timer
    systemctl start palworld-server-backup.timer
}

bootstrap() {
    PALWORLD_SERVER_PASSWORD=$1
    PALWORLD_PUBLIC_PORT=${2:-8211}

    for f in ${HELPER}/*; do . $f; done
    start_palworld_server
    setup_systemd_backup
}

# options
case "$1" in
bootstrap)
    if [ $# -lt 2 ]; then
        echo "使用方法: $0 {命令} {服务器密码} [{公网端口}]"
        echo "示例: $0 bootstrap 123456 8211"
        exit 1
    fi
    bootstrap $2 $3
    ;;
logs)
    logs
    ;;
admin)
    admin
    ;;
start)
    start
    ;;
stop)
    stop
    ;;
restart)
    restart
    ;;
backup)
    backup
    ;;
restore)
    restore
    ;;
passwd)
    set_new_password
    ;;
*)
    echo "使用方法: $0 {命令}"
    echo "可用的命令有:"
    echo "  bootstrap: 初始化"
    echo "  logs: 查看日志"
    echo "  admin: 管理员命令"
    echo "  start: 启动服务"
    echo "  stop: 停止服务"
    echo "  restart: 重启服务"
    echo "  backup: 备份存档"
    echo "  restore: 恢复存档"
    echo "  passwd: 设置服务器密码"
    echo ""
    echo "示例: $0 logs"
    ;;
esac
